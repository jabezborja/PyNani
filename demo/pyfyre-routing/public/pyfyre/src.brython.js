__BRYTHON__.use_VFS = true;
var scripts = {"$timestamp": 1665054991903, "settings": [".py", "_A='/favicon.ico'\nROUTES={'/':{'title':'A PyFyre App | Home','icon':_A},'/about':{'title':'A PyFyre App | About','icon':_A}}\nDEPENDENCIES=[]\n", []], "index": [".py", "_D='height: 100vh; width: 100vw; display: flex; flex-direction: column; justify-content: center;'\n_C='/about'\n_B='margin-left: auto; margin-right: auto; font-size: 50px;'\n_A='style'\nfrom pyfyre import render\nfrom pyfyre.nodes import *\nclass HomePage(Element):\n def __init__(self):super().__init__('div',lambda :[Element('p',lambda :[TextNode('Welcome to Home page!')],attrs={_A:_B}),RouterLink(_C,lambda :[TextNode('Go to About')],attrs={_A:_B})],attrs={_A:_D})\nclass AboutPage(Element):\n def __init__(self):super().__init__('div',lambda :[Element('p',lambda :[TextNode('Welcome to About page!')],attrs={_A:_B}),RouterLink('/',lambda :[TextNode('Go to Home')],attrs={_A:_B})],attrs={_A:_D})\nrender('body',{'/':lambda :HomePage(),_C:lambda :AboutPage()})\n", ["pyfyre", "pyfyre.nodes"]], "pyfyre": [".py", "from browser import document,window\nfrom pyfyre.router import RouteManager\nfrom pyfyre.exceptions import NodeNotFound\n__all__=['render']\ndef render(root_selector,routes):\n A=root_selector ;B=document.select(A)\n if B:RouteManager.set_routes(routes);RouteManager.root_node=B[0];RouteManager.render_route(window.location.pathname)\n else :raise NodeNotFound(A)\n", ["browser", "pyfyre.exceptions", "pyfyre.router"], 1], "pyfyre.events": [".py", "from enum import Enum\nclass BaseEventType(Enum):0\nclass EventType(BaseEventType):Cancel='cancel';Error='error';Scroll='scroll';Select='select';Wheel='wheel'\nclass MouseEventType(BaseEventType):AuxClick='auxclick';Click='click';ContextMenu='contextmenu';DbClick='dblclick';MouseDown='mousedown';MouseEnter='mouseenter';MouseLeave='mouseleave';MouseMove='mousemove';MouseOut='mouseout';MouseOver='mouseover';MouseUp='mouseup'\n", ["enum"]], "pyfyre.exceptions": [".py", "class PyFyreException(Exception):0\nclass NodeNotFound(PyFyreException):0\n", []], "pyfyre.router": [".py", "_A='404: Page Not Found :('\nfrom settings import ROUTES\nfrom browser import document,aio\nfrom pyfyre.nodes import Element,TextNode\nclass RouteManager:\n _routes_builder={};_routes={};root_node=document.select('body')\n @staticmethod\n def set_routes(routes):RouteManager._routes_builder=routes\n @staticmethod\n def parse_route(route):\n  A=route ;B=document.createElement('a');B.href=A ;A=str(B.pathname)\n  if A =='/':return A\n  return str(B.pathname).rstrip('/')\n @staticmethod\n def get_node(route):\n  B=route ;B=RouteManager.parse_route(B);A=RouteManager._routes.get(B)\n  if A is None :\n   C=RouteManager._routes_builder.get(B);A=C()if C else None ;RouteManager._routes[B]=A\n   if isinstance(A,Element):aio.run(A.build_children())\n  return A or Element('p',lambda :[TextNode(_A)])\n @staticmethod\n def render_route(route):A=RouteManager.get_node(route);RouteManager.root_node.appendChild(A.dom)\n @staticmethod\n def change_route(route):B='title';A=route ;A=RouteManager.parse_route(A);C=ROUTES.get(A)or {B:_A};document.title=C.get(B);RouteManager.root_node.innerHTML='';RouteManager.render_route(A)\n", ["browser", "pyfyre.nodes", "settings"]], "pyfyre.nodes.buttons": [".py", "from pyfyre.events import MouseEventType\nfrom pyfyre.nodes.base import Element\nclass Button(Element):\n def __init__(A,onclick,children=None ,*,attrs=None ):super().__init__('button',children,attrs=attrs);A.add_event_listener(MouseEventType.Click,onclick)\n", ["pyfyre.events", "pyfyre.nodes.base"]], "pyfyre.nodes.links": [".py", "_A=None\nfrom pyfyre.events import MouseEventType\nfrom pyfyre.nodes.base import Element\nfrom browser import document,window\nclass Anchor(Element):\n def __init__(B,href,children=_A,*,attrs=_A):A=attrs ;B.href=href ;A=A or {};A['href']=href ;super().__init__('a',children,attrs=A)\n @property\n def absolute_href(self):A=document.createElement('a');A.href=self.href ;return A.href\n def is_internal(B):A=document.createElement('a');A.href=B.href ;return bool(A.host ==window.location.host)\nclass RouterLink(Anchor):\n def __init__(A,href,children=_A,*,attrs=_A):\n  super().__init__(href,children,attrs=attrs)\n  def B(event):from pyfyre.router import RouteManager as B ;window.history.pushState(_A,_A,A.absolute_href);event.preventDefault();B.change_route(href)\n  A.add_event_listener(MouseEventType.Click,B)\n", ["browser", "pyfyre.events", "pyfyre.nodes.base", "pyfyre.router"]], "pyfyre.nodes.lists": [".py", "from browser import aio\nfrom pyfyre.events import EventType\nfrom pyfyre.nodes import Element\nclass ListBuilder(Element):\n def __init__(A,children_builder,*,max_height='300px',render_batch=10,render_interval=0,attrs=None ):\n  A.children_builder=children_builder ;A.render_batch=render_batch ;A.render_interval=render_interval ;A.index=0 ;A.rendered_children=[];super().__init__('div',lambda :A.rendered_children,attrs=attrs);A.dom.style.overflowY='scroll';A.dom.style.overflowWrap='break-word';A.dom.style.maxHeight=max_height\n  def B(event):\n   B=event.target\n   if B.scrollHeight -B.scrollTop -B.clientHeight <1:A.render_next_children()\n  A.add_event_listener(EventType.Scroll,B)\n def render_next_children(A):\n  for C in range(A.render_batch):\n   B=A.children_builder(A.index)\n   if B is None :break\n   A.rendered_children.append(B);A.index +=1\n  A.update_dom()\n async def build_children(A):\n  if A.dom.scrollHeight ==A.dom.clientHeight:A.render_next_children();await aio.sleep(A.render_interval);await A.build_children()\n", ["browser", "pyfyre.events", "pyfyre.nodes"]], "pyfyre.nodes.base": [".py", "import sys\nfrom browser import document,aio\nfrom abc import ABC,abstractmethod\nclass Node(ABC):\n def __init__(A):A.dom=A.create_dom()\n @abstractmethod\n def create_dom(self):raise NotImplementedError\n @abstractmethod\n def update_dom(self):raise NotImplementedError\nclass Element(Node):\n def __init__(A,tag_name,children=None ,*,attrs=None ):A.tag_name=tag_name ;A.children=[];A.attrs=attrs or {};A._children_builder=children ;super().__init__()\n def _secure_build(A):\n  if A._children_builder is None :return A.children\n  try :return A._children_builder()\n  except BaseException:return A.on_build_error(*sys.exc_info())\n def on_build_error(B,exc_type,exc_value,exc_traceback):A='p';return [Element(A,lambda :[TextNode(exc_type)]),Element(A,lambda :[TextNode(exc_value)]),Element(A,lambda :[TextNode(exc_traceback)])]\n async def build_children(A):\n  A.children=A._secure_build()\n  for B in A.children:A.dom.appendChild(B.dom);await aio.sleep(0)\n  for B in A.children:\n   if isinstance(B,Element):await B.build_children()\n def create_dom(A):\n  B=document.createElement(A.tag_name)\n  for (C,D)in A.attrs.items():B.setAttribute(C,D)\n  return B\n def update_dom(A):\n  for (B,C)in A.attrs.items():A.dom.setAttribute(B,C)\n  A.children=A._secure_build();A.dom.replaceChildren(*([B.dom for B in A.children]))\n  for D in A.children:D.update_dom()\n def add_event_listener(A,event_type,callback):A.dom.bind(event_type.value,callback)\nclass TextNode(Node):\n def __init__(A,value):A._value=str(value);super().__init__()\n @property\n def value(self):return self._value\n def set_value(A,value):A._value=str(value)\n def create_dom(A):return document.createTextNode(A.value)\n def update_dom(A):A.dom.nodeValue=A.value\n", ["abc", "browser", "sys"]], "pyfyre.nodes": [".py", "from .base import Node,Element,TextNode\nfrom .buttons import Button\nfrom .links import Anchor,RouterLink\nfrom .lists import ListBuilder\n__all__=['Node','Element','TextNode','Button','Anchor','RouterLink','ListBuilder']\n", ["pyfyre.nodes.base", "pyfyre.nodes.buttons", "pyfyre.nodes.links", "pyfyre.nodes.lists"], 1]}
__BRYTHON__.update_VFS(scripts)
